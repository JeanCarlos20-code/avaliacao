version: 'latest'
services:

  app:
    build:
      context: .
    container_name: app-evaluation
    entrypoint: [ "/bin/sh", "-c", "dockerize -wait tcp://db:5432 -timeout 20s npm run typeorm:run-migrations && npm run start" ]
    image: jeansouza007/evaluation
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/app/node_modules
    restart: on-failure
    tty: true
    networks:
      - app-network
    depends_on:
      - db

  db:
    build:
      context: .docker/postgres
    container_name: db-evaluation
    restart: always
    tty: true
    ports:
      - '5432:5432'
    volumes:
      - .docker/dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=jean
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=evaluation_dev
    networks:
      - app-network

  nginx:
    build:
      context: ./src/config/nginx
      dockerfile: Dockerfile
    image: jeansouza007/evaluation-prod
    container_name: nginx
    networks:
      - app-network
    ports:
      - "8080:80"
    depends_on:
      - app

  pgadmin:
    image: dpage/pgadmin4
    container_name: api-evaluation-pgadmin
    tty: true
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8000:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge
