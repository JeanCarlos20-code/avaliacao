version: 'latest'

services:

  app:
    build:
      context: .
    container_name: evaluation
    entrypoint: [ "dockerize", "-wait", "tcp://db:3306", "-timeout", "20s", "npm", "run", "start" ]
    networks:
      - app-network
    image: jeansouza007/evaluation
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: db-evaluation
    restart: always
    tty: true
    ports:
      - '5432:5432'
    volumes:
      - .docker/dbdata:/var/lib/postgresql/data
      - ./.docker/postgres/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    networks:
      - app-network

  dbtest:
    image: postgres:latest
    container_name: db-evaluation-test
    restart: always
    tty: true
    ports:
      - '5433:5432'
    volumes:
      - .docker/dbdatatest:/var/lib/postgresql/data
      - ./.docker/postgres/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}

  pgadmin:
    image: dpage/pgadmin4
    container_name: api-evaluation-pgadmin
    tty: true
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8000:80"
    depends_on:
      - db

networks:
  app-network:
    name: app-network
    driver: bridge
